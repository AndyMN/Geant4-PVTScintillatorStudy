//
// File generated by rootcint at Tue Apr 19 00:28:51 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DictOutput
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DictOutput.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void StepData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StepData(void *p = 0);
   static void *newArray_StepData(Long_t size, void *p);
   static void delete_StepData(void *p);
   static void deleteArray_StepData(void *p);
   static void destruct_StepData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StepData*)
   {
      ::StepData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StepData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StepData", ::StepData::Class_Version(), "./StepData.h", 7,
                  typeid(::StepData), DefineBehavior(ptr, ptr),
                  &::StepData::Dictionary, isa_proxy, 4,
                  sizeof(::StepData) );
      instance.SetNew(&new_StepData);
      instance.SetNewArray(&newArray_StepData);
      instance.SetDelete(&delete_StepData);
      instance.SetDeleteArray(&deleteArray_StepData);
      instance.SetDestructor(&destruct_StepData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StepData*)
   {
      return GenerateInitInstanceLocal((::StepData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StepData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TrackData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TrackData(void *p = 0);
   static void *newArray_TrackData(Long_t size, void *p);
   static void delete_TrackData(void *p);
   static void deleteArray_TrackData(void *p);
   static void destruct_TrackData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackData*)
   {
      ::TrackData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackData", ::TrackData::Class_Version(), "./TrackData.h", 7,
                  typeid(::TrackData), DefineBehavior(ptr, ptr),
                  &::TrackData::Dictionary, isa_proxy, 4,
                  sizeof(::TrackData) );
      instance.SetNew(&new_TrackData);
      instance.SetNewArray(&newArray_TrackData);
      instance.SetDelete(&delete_TrackData);
      instance.SetDeleteArray(&deleteArray_TrackData);
      instance.SetDestructor(&destruct_TrackData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrackData*)
   {
      return GenerateInitInstanceLocal((::TrackData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EventData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventData(void *p = 0);
   static void *newArray_EventData(Long_t size, void *p);
   static void delete_EventData(void *p);
   static void deleteArray_EventData(void *p);
   static void destruct_EventData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventData*)
   {
      ::EventData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventData", ::EventData::Class_Version(), "./EventData.h", 7,
                  typeid(::EventData), DefineBehavior(ptr, ptr),
                  &::EventData::Dictionary, isa_proxy, 4,
                  sizeof(::EventData) );
      instance.SetNew(&new_EventData);
      instance.SetNewArray(&newArray_EventData);
      instance.SetDelete(&delete_EventData);
      instance.SetDeleteArray(&deleteArray_EventData);
      instance.SetDestructor(&destruct_EventData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventData*)
   {
      return GenerateInitInstanceLocal((::EventData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *StepData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StepData::Class_Name()
{
   return "StepData";
}

//______________________________________________________________________________
const char *StepData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StepData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StepData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StepData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StepData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StepData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StepData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StepData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TrackData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrackData::Class_Name()
{
   return "TrackData";
}

//______________________________________________________________________________
const char *TrackData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *EventData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EventData::Class_Name()
{
   return "EventData";
}

//______________________________________________________________________________
const char *EventData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void StepData::Streamer(TBuffer &R__b)
{
   // Stream an object of class StepData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StepData::Class(),this);
   } else {
      R__b.WriteClassBuffer(StepData::Class(),this);
   }
}

//______________________________________________________________________________
void StepData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StepData.
      TClass *R__cl = ::StepData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StepID", &StepID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_x", &Pre_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_y", &Pre_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_z", &Pre_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_px", &Pre_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_py", &Pre_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_pz", &Pre_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_polx", &Pre_polx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_poly", &Pre_poly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_polz", &Pre_polz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_ProperTime", &Pre_ProperTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_LocalTime", &Pre_LocalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_GlobalTime", &Pre_GlobalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_Ekin", &Pre_Ekin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_Etot", &Pre_Etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_Mass", &Pre_Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_Charge", &Pre_Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_MagneticMoment", &Pre_MagneticMoment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_Velocity", &Pre_Velocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pre_Material", (void*)&Pre_Material);
      R__insp.InspectMember("string", (void*)&Pre_Material, "Pre_Material.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_x", &Post_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_y", &Post_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_z", &Post_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_px", &Post_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_py", &Post_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_pz", &Post_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_polx", &Post_polx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_poly", &Post_poly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_polz", &Post_polz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_ProperTime", &Post_ProperTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_LocalTime", &Post_LocalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_GlobalTime", &Post_GlobalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_Ekin", &Post_Ekin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_Etot", &Post_Etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_Mass", &Post_Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_Charge", &Post_Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_MagneticMoment", &Post_MagneticMoment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_Velocity", &Post_Velocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Post_Material", (void*)&Post_Material);
      R__insp.InspectMember("string", (void*)&Post_Material, "Post_Material.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalEnergyDeposit", &TotalEnergyDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NonIonizingEnergyDeposit", &NonIonizingEnergyDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DeltaE", &DeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltax", &Deltax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltay", &Deltay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltaz", &Deltaz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StepLength", &StepLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltat", &Deltat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltapx", &Deltapx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltapy", &Deltapy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Deltapz", &Deltapz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsFirstStepInVolume", &IsFirstStepInVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsLastStepInVolume", &IsLastStepInVolume);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StepData(void *p) {
      return  p ? new(p) ::StepData : new ::StepData;
   }
   static void *newArray_StepData(Long_t nElements, void *p) {
      return p ? new(p) ::StepData[nElements] : new ::StepData[nElements];
   }
   // Wrapper around operator delete
   static void delete_StepData(void *p) {
      delete ((::StepData*)p);
   }
   static void deleteArray_StepData(void *p) {
      delete [] ((::StepData*)p);
   }
   static void destruct_StepData(void *p) {
      typedef ::StepData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StepData

//______________________________________________________________________________
void TrackData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TrackData::Class(),this);
   } else {
      R__b.WriteClassBuffer(TrackData::Class(),this);
   }
}

//______________________________________________________________________________
void TrackData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TrackData.
      TClass *R__cl = ::TrackData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackID", &TrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParentTrackID", &ParentTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleName", (void*)&ParticleName);
      R__insp.InspectMember("string", (void*)&ParticleName, "ParticleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Steps", (void*)&Steps);
      R__insp.InspectMember("vector<StepData>", (void*)&Steps, "Steps.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TrackData(void *p) {
      return  p ? new(p) ::TrackData : new ::TrackData;
   }
   static void *newArray_TrackData(Long_t nElements, void *p) {
      return p ? new(p) ::TrackData[nElements] : new ::TrackData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackData(void *p) {
      delete ((::TrackData*)p);
   }
   static void deleteArray_TrackData(void *p) {
      delete [] ((::TrackData*)p);
   }
   static void destruct_TrackData(void *p) {
      typedef ::TrackData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrackData

//______________________________________________________________________________
void EventData::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventData::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventData::Class(),this);
   }
}

//______________________________________________________________________________
void EventData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventData.
      TClass *R__cl = ::EventData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventID", &EventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfPrimaryVertices", &NumberOfPrimaryVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<TrackData>", (void*)&Tracks, "Tracks.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventData(void *p) {
      return  p ? new(p) ::EventData : new ::EventData;
   }
   static void *newArray_EventData(Long_t nElements, void *p) {
      return p ? new(p) ::EventData[nElements] : new ::EventData[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventData(void *p) {
      delete ((::EventData*)p);
   }
   static void deleteArray_EventData(void *p) {
      delete [] ((::EventData*)p);
   }
   static void destruct_EventData(void *p) {
      typedef ::EventData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventData

namespace ROOT {
   void vectorlEStepDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStepDatagR_Dictionary();
   static void *new_vectorlEStepDatagR(void *p = 0);
   static void *newArray_vectorlEStepDatagR(Long_t size, void *p);
   static void delete_vectorlEStepDatagR(void *p);
   static void deleteArray_vectorlEStepDatagR(void *p);
   static void destruct_vectorlEStepDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StepData>*)
   {
      vector<StepData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StepData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StepData>", -2, "prec_stl/vector", 49,
                  typeid(vector<StepData>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStepDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StepData>) );
      instance.SetNew(&new_vectorlEStepDatagR);
      instance.SetNewArray(&newArray_vectorlEStepDatagR);
      instance.SetDelete(&delete_vectorlEStepDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlEStepDatagR);
      instance.SetDestructor(&destruct_vectorlEStepDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StepData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StepData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStepDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StepData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStepDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StepData> : new vector<StepData>;
   }
   static void *newArray_vectorlEStepDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StepData>[nElements] : new vector<StepData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStepDatagR(void *p) {
      delete ((vector<StepData>*)p);
   }
   static void deleteArray_vectorlEStepDatagR(void *p) {
      delete [] ((vector<StepData>*)p);
   }
   static void destruct_vectorlEStepDatagR(void *p) {
      typedef vector<StepData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StepData>

namespace ROOT {
   void vectorlETrackDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETrackDatagR_Dictionary();
   static void *new_vectorlETrackDatagR(void *p = 0);
   static void *newArray_vectorlETrackDatagR(Long_t size, void *p);
   static void delete_vectorlETrackDatagR(void *p);
   static void deleteArray_vectorlETrackDatagR(void *p);
   static void destruct_vectorlETrackDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TrackData>*)
   {
      vector<TrackData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TrackData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TrackData>", -2, "prec_stl/vector", 49,
                  typeid(vector<TrackData>), DefineBehavior(ptr, ptr),
                  0, &vectorlETrackDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TrackData>) );
      instance.SetNew(&new_vectorlETrackDatagR);
      instance.SetNewArray(&newArray_vectorlETrackDatagR);
      instance.SetDelete(&delete_vectorlETrackDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlETrackDatagR);
      instance.SetDestructor(&destruct_vectorlETrackDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TrackData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TrackData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETrackDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TrackData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETrackDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TrackData> : new vector<TrackData>;
   }
   static void *newArray_vectorlETrackDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TrackData>[nElements] : new vector<TrackData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETrackDatagR(void *p) {
      delete ((vector<TrackData>*)p);
   }
   static void deleteArray_vectorlETrackDatagR(void *p) {
      delete [] ((vector<TrackData>*)p);
   }
   static void destruct_vectorlETrackDatagR(void *p) {
      typedef vector<TrackData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TrackData>

/********************************************************
* DictOutput.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDictOutput();

extern "C" void G__set_cpp_environmentDictOutput() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StepData.h");
  G__add_compiledheader("TrackData.h");
  G__add_compiledheader("EventData.h");
  G__cpp_reset_tagtableDictOutput();
}
#include <new>
extern "C" int G__cpp_dllrevDictOutput() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StepData */
static int G__DictOutput_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StepData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StepData[n];
     } else {
       p = new((void*) gvp) StepData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StepData;
     } else {
       p = new((void*) gvp) StepData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_StepData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StepData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StepData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StepData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StepData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StepData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StepData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StepData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StepData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StepData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StepData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StepData(*(StepData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_StepData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StepData G__TStepData;
static int G__DictOutput_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StepData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StepData*) (soff+(sizeof(StepData)*i)))->~G__TStepData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StepData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StepData*) (soff))->~G__TStepData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StepData* dest = (StepData*) G__getstructoffset();
   *dest = *(StepData*) libp->para[0].ref;
   const StepData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackData */
static int G__DictOutput_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackData*) G__getstructoffset())->PrintData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackData[n];
     } else {
       p = new((void*) gvp) TrackData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackData;
     } else {
       p = new((void*) gvp) TrackData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_TrackData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackData(*(TrackData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_TrackData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackData G__TTrackData;
static int G__DictOutput_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackData*) (soff+(sizeof(TrackData)*i)))->~G__TTrackData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackData*) (soff))->~G__TTrackData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackData* dest = (TrackData*) G__getstructoffset();
   *dest = *(TrackData*) libp->para[0].ref;
   const TrackData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventData */
static int G__DictOutput_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventData[n];
     } else {
       p = new((void*) gvp) EventData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventData;
     } else {
       p = new((void*) gvp) EventData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_EventData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventData*) G__getstructoffset())->PrintData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventData(*(EventData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_EventData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventData G__TEventData;
static int G__DictOutput_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventData*) (soff+(sizeof(EventData)*i)))->~G__TEventData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventData*) (soff))->~G__TEventData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventData* dest = (EventData*) G__getstructoffset();
   *dest = *(EventData*) libp->para[0].ref;
   const EventData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StepData */

/* TrackData */

/* EventData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDictOutput {
 public:
  G__Sizep2memfuncDictOutput(): p(&G__Sizep2memfuncDictOutput::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDictOutput::*p)();
};

size_t G__get_sizep2memfuncDictOutput()
{
  G__Sizep2memfuncDictOutput a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDictOutput() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_StepData))) {
     StepData *G__Lderived;
     G__Lderived=(StepData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_StepData),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_TrackData))) {
     TrackData *G__Lderived;
     G__Lderived=(TrackData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_TrackData),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_EventData))) {
     EventData *G__Lderived;
     G__Lderived=(EventData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_EventData),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDictOutput() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StepData>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEStepDatacOallocatorlEStepDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEStepDatacOallocatorlEStepDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TrackData>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StepData */
static void G__setup_memvarStepData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_StepData));
   { StepData *p; p=(StepData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->StepID)-(long)(p)),105,0,0,-1,-1,-1,1,"StepID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_x)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_y)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_z)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_px)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_py)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_pz)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_polx)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_polx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_poly)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_poly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_polz)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_polz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_ProperTime)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_ProperTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_LocalTime)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_LocalTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_GlobalTime)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_GlobalTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_Ekin)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_Ekin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_Etot)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_Etot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_Mass)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_Mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_MagneticMoment)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_MagneticMoment=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_Velocity)-(long)(p)),100,0,0,-1,-1,-1,1,"Pre_Velocity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pre_Material)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_string),-1,-1,1,"Pre_Material=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_x)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_y)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_z)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_px)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_py)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_pz)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_polx)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_polx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_poly)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_poly=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_polz)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_polz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_ProperTime)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_ProperTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_LocalTime)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_LocalTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_GlobalTime)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_GlobalTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_Ekin)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_Ekin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_Etot)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_Etot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_Mass)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_Mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_MagneticMoment)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_MagneticMoment=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_Velocity)-(long)(p)),100,0,0,-1,-1,-1,1,"Post_Velocity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Post_Material)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_string),-1,-1,1,"Post_Material=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TotalEnergyDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalEnergyDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NonIonizingEnergyDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"NonIonizingEnergyDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DeltaE)-(long)(p)),100,0,0,-1,-1,-1,1,"DeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltax)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltay)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltaz)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltaz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StepLength)-(long)(p)),100,0,0,-1,-1,-1,1,"StepLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltat)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltapx)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltapx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltapy)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltapy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Deltapz)-(long)(p)),100,0,0,-1,-1,-1,1,"Deltapz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsFirstStepInVolume)-(long)(p)),103,0,0,-1,-1,-1,1,"IsFirstStepInVolume=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsLastStepInVolume)-(long)(p)),103,0,0,-1,-1,-1,1,"IsLastStepInVolume=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackData */
static void G__setup_memvarTrackData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_TrackData));
   { TrackData *p; p=(TrackData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TrackID)-(long)(p)),105,0,0,-1,-1,-1,1,"TrackID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParentTrackID)-(long)(p)),105,0,0,-1,-1,-1,1,"ParentTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParticleName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_string),-1,-1,1,"ParticleName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Steps)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR),G__defined_typename("vector<StepData>"),-1,1,"Steps=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventData */
static void G__setup_memvarEventData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_EventData));
   { EventData *p; p=(EventData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EventID)-(long)(p)),105,0,0,-1,-1,-1,1,"EventID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumberOfPrimaryVertices)-(long)(p)),105,0,0,-1,-1,-1,1,"NumberOfPrimaryVertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR),G__defined_typename("vector<TrackData>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDictOutput() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStepData(void) {
   /* StepData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_StepData));
   G__memfunc_setup("StepData",790,G__DictOutput_168_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_StepData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_168_0_2, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StepData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StepData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StepData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StepData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StepData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StepData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StepData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StepData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StepData", 790, G__DictOutput_168_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_StepData), -1, 0, 1, 1, 1, 0, "u 'StepData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StepData", 916, G__DictOutput_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_StepData), -1, 1, 1, 1, 1, 0, "u 'StepData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackData(void) {
   /* TrackData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_TrackData));
   G__memfunc_setup("PrintData",903,G__DictOutput_169_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackData",879,G__DictOutput_169_0_2, 105, G__get_linked_tagnum(&G__DictOutputLN_TrackData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_169_0_3, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrackData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_169_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_169_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrackData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_169_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrackData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_169_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_169_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_169_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_169_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackData", 879, G__DictOutput_169_0_15, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_TrackData), -1, 0, 1, 1, 1, 0, "u 'TrackData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackData", 1005, G__DictOutput_169_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_169_0_17, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_TrackData), -1, 1, 1, 1, 1, 0, "u 'TrackData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventData(void) {
   /* EventData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_EventData));
   G__memfunc_setup("EventData",892,G__DictOutput_174_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_EventData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__DictOutput_174_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_174_0_3, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_174_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_174_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_174_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_174_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_174_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_174_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_174_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_174_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventData", 892, G__DictOutput_174_0_15, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_EventData), -1, 0, 1, 1, 1, 0, "u 'EventData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventData", 1018, G__DictOutput_174_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_174_0_17, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_EventData), -1, 1, 1, 1, 1, 0, "u 'EventData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDictOutput() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"STEPDATA_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"TRACKDATA_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"EVENTDATA_H=0",1,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDictOutput() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDictOutput() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictOutputLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_StepData = { "StepData" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TrackData = { "TrackData" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR = { "vector<StepData,allocator<StepData> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEStepDatacOallocatorlEStepDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StepData,allocator<StepData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_EventData = { "EventData" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR = { "vector<TrackData,allocator<TrackData> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TrackData,allocator<TrackData> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDictOutput() {
  G__DictOutputLN_TClass.tagnum = -1 ;
  G__DictOutputLN_TBuffer.tagnum = -1 ;
  G__DictOutputLN_TMemberInspector.tagnum = -1 ;
  G__DictOutputLN_TObject.tagnum = -1 ;
  G__DictOutputLN_string.tagnum = -1 ;
  G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_StepData.tagnum = -1 ;
  G__DictOutputLN_TrackData.tagnum = -1 ;
  G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEStepDatacOallocatorlEStepDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_EventData.tagnum = -1 ;
  G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDictOutput() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_string);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_StepData),sizeof(StepData),-1,292096,(char*)NULL,G__setup_memvarStepData,G__setup_memfuncStepData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_TrackData),sizeof(TrackData),-1,292096,(char*)NULL,G__setup_memvarTrackData,G__setup_memfuncTrackData);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEStepDatacOallocatorlEStepDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEStepDatacOallocatorlEStepDatagRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_EventData),sizeof(EventData),-1,292096,(char*)NULL,G__setup_memvarEventData,G__setup_memfuncEventData);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDictOutput(void) {
  G__check_setup_version(30051515,"G__cpp_setupDictOutput()");
  G__set_cpp_environmentDictOutput();
  G__cpp_setup_tagtableDictOutput();

  G__cpp_setup_inheritanceDictOutput();

  G__cpp_setup_typetableDictOutput();

  G__cpp_setup_memvarDictOutput();

  G__cpp_setup_memfuncDictOutput();
  G__cpp_setup_globalDictOutput();
  G__cpp_setup_funcDictOutput();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDictOutput();
  return;
}
class G__cpp_setup_initDictOutput {
  public:
    G__cpp_setup_initDictOutput() { G__add_setup_func("DictOutput",(G__incsetup)(&G__cpp_setupDictOutput)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDictOutput() { G__remove_setup_func("DictOutput"); }
};
G__cpp_setup_initDictOutput G__cpp_setup_initializerDictOutput;

